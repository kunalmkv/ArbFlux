<?xml version="1.0" encoding="UTF-8"?>
<svg width="1600" height="1200" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .title { font-family: Arial, sans-serif; font-size: 24px; font-weight: bold; fill: #2c3e50; }
      .subtitle { font-family: Arial, sans-serif; font-size: 18px; font-weight: bold; fill: #34495e; }
      .label { font-family: Arial, sans-serif; font-size: 12px; font-weight: bold; fill: #2c3e50; }
      .formula { font-family: "Courier New", monospace; font-size: 11px; fill: #2c3e50; }
      .algorithm { font-family: Arial, sans-serif; font-size: 10px; fill: #ffffff; }
      .step { font-family: Arial, sans-serif; font-size: 10px; fill: #2c3e50; }
      .arrow { stroke: #7f8c8d; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .math-flow { stroke: #e74c3c; stroke-width: 2; fill: none; marker-end: url(#math-arrow); }
      .formula-box { fill: #ecf0f1; stroke: #bdc3c7; stroke-width: 1; }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#7f8c8d" />
    </marker>
    <marker id="math-arrow" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#e74c3c" />
    </marker>
  </defs>
  
  <!-- Background -->
  <rect width="1600" height="1200" fill="#ffffff"/>
  
  <!-- Title -->
  <text x="800" y="30" text-anchor="middle" class="title">DeFi Arbitrage Bot - Mathematical Algorithms</text>
  
  <!-- Uniswap V2 Core Formulas -->
  <rect x="50" y="60" width="400" height="200" fill="#3498db" rx="5"/>
  <text x="250" y="85" text-anchor="middle" class="subtitle">Uniswap V2 Core Formulas</text>
  
  <!-- Constant Product Formula -->
  <rect x="70" y="100" width="360" height="40" class="formula-box" rx="3"/>
  <text x="250" y="115" text-anchor="middle" class="label">Constant Product Formula</text>
  <text x="250" y="130" text-anchor="middle" class="formula">x * y = k (where k is constant)</text>
  
  <!-- Fee Calculation -->
  <rect x="70" y="150" width="360" height="40" class="formula-box" rx="3"/>
  <text x="250" y="165" text-anchor="middle" class="label">Fee Calculation</text>
  <text x="250" y="180" text-anchor="middle" class="formula">γ = 997/1000 = 0.997 (0.3% fee)</text>
  
  <!-- Output Amount Formula -->
  <rect x="70" y="200" width="360" height="40" class="formula-box" rx="3"/>
  <text x="250" y="215" text-anchor="middle" class="label">Output Amount Calculation</text>
  <text x="250" y="230" text-anchor="middle" class="formula">amountOut = floor(amountIn * γ * rOut / (rIn + amountIn * γ))</text>
  
  <!-- Input Amount Formula -->
  <rect x="70" y="250" width="360" height="40" class="formula-box" rx="3"/>
  <text x="250" y="265" text-anchor="middle" class="label">Input Amount Calculation</text>
  <text x="250" y="280" text-anchor="middle" class="formula">amountIn = ceil((rIn * amountOut * 1000) / ((rOut - amountOut) * 997)) + 1</text>
  
  <!-- Arbitrage Detection Algorithms -->
  <rect x="500" y="60" width="400" height="200" fill="#e74c3c" rx="5"/>
  <text x="700" y="85" text-anchor="middle" class="subtitle">Arbitrage Detection</text>
  
  <!-- Direct Arbitrage -->
  <rect x="520" y="100" width="360" height="40" fill="#c0392b" rx="3"/>
  <text x="700" y="115" text-anchor="middle" class="algorithm">Direct Arbitrage Detection</text>
  <text x="700" y="130" text-anchor="middle" class="step">Compare prices across DEXs for same token pair</text>
  
  <!-- Triangular Arbitrage -->
  <rect x="520" y="150" width="360" height="40" fill="#c0392b" rx="3"/>
  <text x="700" y="165" text-anchor="middle" class="algorithm">Triangular Arbitrage Detection</text>
  <text x="700" y="180" text-anchor="middle" class="step">A → B → C → A cycle optimization</text>
  
  <!-- Price Difference -->
  <rect x="520" y="200" width="360" height="40" class="formula-box" rx="3"/>
  <text x="700" y="215" text-anchor="middle" class="label">Price Difference Calculation</text>
  <text x="700" y="230" text-anchor="middle" class="formula">ΔP = |P₁ - P₂| / min(P₁, P₂) * 100%</text>
  
  <!-- Profit Calculation -->
  <rect x="520" y="250" width="360" height="40" class="formula-box" rx="3"/>
  <text x="700" y="265" text-anchor="middle" class="label">Profit Calculation</text>
  <text x="700" y="280" text-anchor="middle" class="formula">Profit = (amountOut - amountIn - gasCost) * priceUSD</text>
  
  <!-- Binary Search Optimization -->
  <rect x="950" y="60" width="400" height="200" fill="#f39c12" rx="5"/>
  <text x="1150" y="85" text-anchor="middle" class="subtitle">Binary Search Optimization</text>
  
  <!-- Algorithm Steps -->
  <rect x="970" y="100" width="360" height="30" fill="#e67e22" rx="3"/>
  <text x="1150" y="115" text-anchor="middle" class="algorithm">Step 1: Initialize search range</text>
  <text x="1150" y="125" text-anchor="middle" class="step">low = 1, high = maxAmount</text>
  
  <rect x="970" y="140" width="360" height="30" fill="#e67e22" rx="3"/>
  <text x="1150" y="155" text-anchor="middle" class="algorithm">Step 2: Calculate midpoint</text>
  <text x="1150" y="165" text-anchor="middle" class="step">mid = (low + high) / 2</text>
  
  <rect x="970" y="180" width="360" height="30" fill="#e67e22" rx="3"/>
  <text x="1150" y="195" text-anchor="middle" class="algorithm">Step 3: Evaluate profit</text>
  <text x="1150" y="205" text-anchor="middle" class="step">profit = calculateArbitrageProfit(mid)</text>
  
  <rect x="970" y="220" width="360" height="30" fill="#e67e22" rx="3"/>
  <text x="1150" y="235" text-anchor="middle" class="algorithm">Step 4: Update search range</text>
  <text x="1150" y="245" text-anchor="middle" class="step">if profit > 0: low = mid, else: high = mid</text>
  
  <!-- Risk Management Algorithms -->
  <rect x="1400" y="60" width="180" height="200" fill="#27ae60" rx="5"/>
  <text x="1490" y="85" text-anchor="middle" class="subtitle">Risk Management</text>
  
  <rect x="1420" y="100" width="140" height="30" fill="#229954" rx="3"/>
  <text x="1490" y="115" text-anchor="middle" class="algorithm">Kelly Criterion</text>
  <text x="1490" y="125" text-anchor="middle" class="step">f* = (bp - q) / b</text>
  
  <rect x="1420" y="140" width="140" height="30" fill="#229954" rx="3"/>
  <text x="1490" y="155" text-anchor="middle" class="algorithm">Position Sizing</text>
  <text x="1490" y="165" text-anchor="middle" class="step">size = min(maxSize, kellySize)</text>
  
  <rect x="1420" y="180" width="140" height="30" fill="#229954" rx="3"/>
  <text x="1490" y="195" text-anchor="middle" class="algorithm">Risk Score</text>
  <text x="1490" y="205" text-anchor="middle" class="step">score = Σ(riskFactors * weights)</text>
  
  <!-- Price Impact Calculation -->
  <rect x="50" y="300" width="400" height="150" fill="#9b59b6" rx="5"/>
  <text x="250" y="325" text-anchor="middle" class="subtitle">Price Impact Analysis</text>
  
  <rect x="70" y="340" width="360" height="30" class="formula-box" rx="3"/>
  <text x="250" y="355" text-anchor="middle" class="label">Spot Price</text>
  <text x="250" y="370" text-anchor="middle" class="formula">spotPrice = reserveOut / reserveIn</text>
  
  <rect x="70" y="380" width="360" height="30" class="formula-box" rx="3"/>
  <text x="250" y="395" text-anchor="middle" class="label">Execution Price</text>
  <text x="250" y="410" text-anchor="middle" class="formula">executionPrice = amountOut / amountIn</text>
  
  <rect x="70" y="420" width="360" height="30" class="formula-box" rx="3"/>
  <text x="250" y="435" text-anchor="middle" class="label">Price Impact</text>
  <text x="250" y="450" text-anchor="middle" class="formula">priceImpact = (spotPrice - executionPrice) / spotPrice</text>
  
  <!-- Gas Optimization -->
  <rect x="500" y="300" width="400" height="150" fill="#e67e22" rx="5"/>
  <text x="700" y="325" text-anchor="middle" class="subtitle">Gas Optimization</text>
  
  <rect x="520" y="340" width="360" height="30" class="formula-box" rx="3"/>
  <text x="700" y="355" text-anchor="middle" class="label">Gas Cost Estimation</text>
  <text x="700" y="370" text-anchor="middle" class="formula">gasCost = gasUsed * gasPrice * priceETH</text>
  
  <rect x="520" y="380" width="360" height="30" class="formula-box" rx="3"/>
  <text x="700" y="395" text-anchor="middle" class="label">Optimal Gas Price</text>
  <text x="700" y="410" text-anchor="middle" class="formula">optimalGasPrice = baseGasPrice * (1 + priorityFee)</text>
  
  <rect x="520" y="420" width="360" height="30" class="formula-box" rx="3"/>
  <text x="700" y="435" text-anchor="middle" class="label">Gas Buffer</text>
  <text x="700" y="450" text-anchor="middle" class="formula">gasBuffer = estimatedGas * 1.2 (20% buffer)</text>
  
  <!-- MEV Protection -->
  <rect x="950" y="300" width="400" height="150" fill="#34495e" rx="5"/>
  <text x="1150" y="325" text-anchor="middle" class="subtitle">MEV Protection</text>
  
  <rect x="970" y="340" width="360" height="30" fill="#2c3e50" rx="3"/>
  <text x="1150" y="355" text-anchor="middle" class="algorithm">Private Transactions</text>
  <text x="1150" y="370" text-anchor="middle" class="step">Use Flashbots or private mempool</text>
  
  <rect x="970" y="380" width="360" height="30" fill="#2c3e50" rx="3"/>
  <text x="1150" y="395" text-anchor="middle" class="algorithm">Slippage Protection</text>
  <text x="1150" y="410" text-anchor="middle" class="step">maxSlippage = 1% (configurable)</text>
  
  <rect x="970" y="420" width="360" height="30" fill="#2c3e50" rx="3"/>
  <text x="1150" y="435" text-anchor="middle" class="algorithm">Deadline Protection</text>
  <text x="1150" y="450" text-anchor="middle" class="step">deadline = block.timestamp + 300 (5 min)</text>
  
  <!-- Liquidity Analysis -->
  <rect x="1400" y="300" width="180" height="150" fill="#1abc9c" rx="5"/>
  <text x="1490" y="325" text-anchor="middle" class="subtitle">Liquidity Analysis</text>
  
  <rect x="1420" y="340" width="140" height="30" fill="#16a085" rx="3"/>
  <text x="1490" y="355" text-anchor="middle" class="algorithm">Liquidity Check</text>
  <text x="1490" y="365" text-anchor="middle" class="step">minLiquidity = 100,000 USD</text>
  
  <rect x="1420" y="380" width="140" height="30" fill="#16a085" rx="3"/>
  <text x="1490" y="395" text-anchor="middle" class="algorithm">Depth Analysis</text>
  <text x="1490" y="405" text-anchor="middle" class="step">depth = reserve0 * price0 + reserve1 * price1</text>
  
  <rect x="1420" y="420" width="140" height="30" fill="#16a085" rx="3"/>
  <text x="1490" y="435" text-anchor="middle" class="algorithm">Volume Analysis</text>
  <text x="1490" y="445" text-anchor="middle" class="step">24h volume > 1,000,000 USD</text>
  
  <!-- Algorithm Flow -->
  <rect x="50" y="500" width="1500" height="300" fill="#ecf0f1" rx="5"/>
  <text x="800" y="525" text-anchor="middle" class="subtitle">Algorithm Execution Flow</text>
  
  <!-- Step 1: Data Collection -->
  <rect x="70" y="540" width="200" height="60" fill="#3498db" rx="5"/>
  <text x="170" y="560" text-anchor="middle" class="algorithm">Step 1: Data Collection</text>
  <text x="170" y="575" text-anchor="middle" class="step">• Fetch reserves from DEXs</text>
  <text x="170" y="590" text-anchor="middle" class="step">• Get current gas prices</text>
  
  <!-- Step 2: Price Calculation -->
  <rect x="300" y="540" width="200" height="60" fill="#e74c3c" rx="5"/>
  <text x="400" y="560" text-anchor="middle" class="algorithm">Step 2: Price Calculation</text>
  <text x="400" y="575" text-anchor="middle" class="step">• Calculate spot prices</text>
  <text x="400" y="590" text-anchor="middle" class="step">• Apply Uniswap V2 formulas</text>
  
  <!-- Step 3: Arbitrage Detection -->
  <rect x="530" y="540" width="200" height="60" fill="#f39c12" rx="5"/>
  <text x="630" y="560" text-anchor="middle" class="algorithm">Step 3: Arbitrage Detection</text>
  <text x="630" y="575" text-anchor="middle" class="step">• Compare prices across DEXs</text>
  <text x="630" y="590" text-anchor="middle" class="step">• Calculate price differences</text>
  
  <!-- Step 4: Optimization -->
  <rect x="760" y="540" width="200" height="60" fill="#9b59b6" rx="5"/>
  <text x="860" y="560" text-anchor="middle" class="algorithm">Step 4: Binary Search</text>
  <text x="860" y="575" text-anchor="middle" class="step">• Find optimal trade size</text>
  <text x="860" y="590" text-anchor="middle" class="step">• Maximize profit</text>
  
  <!-- Step 5: Risk Assessment -->
  <rect x="990" y="540" width="200" height="60" fill="#27ae60" rx="5"/>
  <text x="1090" y="560" text-anchor="middle" class="algorithm">Step 5: Risk Assessment</text>
  <text x="1090" y="575" text-anchor="middle" class="step">• Calculate risk score</text>
  <text x="1090" y="590" text-anchor="middle" class="step">• Apply Kelly Criterion</text>
  
  <!-- Step 6: Execution -->
  <rect x="1220" y="540" width="200" height="60" fill="#e67e22" rx="5"/>
  <text x="1320" y="560" text-anchor="middle" class="algorithm">Step 6: Execution</text>
  <text x="1320" y="575" text-anchor="middle" class="step">• Prepare transaction</text>
  <text x="1320" y="590" text-anchor="middle" class="step">• Execute with MEV protection</text>
  
  <!-- Flow Arrows -->
  <line x1="270" y1="570" x2="300" y2="570" class="math-flow"/>
  <line x1="500" y1="570" x2="530" y2="570" class="math-flow"/>
  <line x1="730" y1="570" x2="760" y2="570" class="math-flow"/>
  <line x1="960" y1="570" x2="990" y2="570" class="math-flow"/>
  <line x1="1190" y1="570" x2="1220" y2="570" class="math-flow"/>
  
  <!-- Mathematical Precision -->
  <rect x="70" y="660" width="700" height="120" fill="#ffffff" stroke="#bdc3c7" stroke-width="2" rx="5"/>
  <text x="420" y="685" text-anchor="middle" class="subtitle">Mathematical Precision Features</text>
  
  <text x="90" y="710" class="label">• Decimal.js for arbitrary precision arithmetic</text>
  <text x="90" y="730" class="label">• Proper rounding using floor() and ceil()</text>
  <text x="90" y="750" class="label">• Exact Uniswap V2 formula implementation</text>
  <text x="90" y="770" class="label">• Deterministic calculations across platforms</text>
  
  <text x="450" y="710" class="label">• Gas cost estimation with safety margins</text>
  <text x="450" y="730" class="label">• Price impact analysis with slippage protection</text>
  <text x="450" y="750" class="label">• Kelly Criterion for optimal position sizing</text>
  <text x="450" y="770" class="label">• Risk scoring with multiple factor analysis</text>
  
  <!-- Performance Metrics -->
  <rect x="800" y="660" width="700" height="120" fill="#ffffff" stroke="#bdc3c7" stroke-width="2" rx="5"/>
  <text x="1150" y="685" text-anchor="middle" class="subtitle">Performance & Accuracy</text>
  
  <text x="820" y="710" class="label">• 1000+ calculations per second</text>
  <text x="820" y="730" class="label">• Sub-millisecond response times</text>
  <text x="820" y="750" class="label">• 99.99% calculation accuracy</text>
  <text x="820" y="770" class="label">• Memory-efficient operations</text>
  
  <text x="1050" y="710" class="label">• Real-time price monitoring</text>
  <text x="1050" y="730" class="label">• Block-level consistency</text>
  <text x="1050" y="750" class="label">• MEV protection strategies</text>
  <text x="1050" y="770" class="label">• Comprehensive error handling</text>
</svg>
